/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7  
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      phaseProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

type basicMultiphaseSystem;

phases (air1 air2 water);

air1
{
    type            purePhaseModel;
    diameterModel   isothermal;
    isothermalCoeffs
    {
        d0              3e-3;
        p0              1e5;
    }

    residualAlpha   1e-6;
}

air2
{
    type            purePhaseModel;
    diameterModel   isothermal;
    isothermalCoeffs
    {
        d0              5e-3;
        p0              1e5;
    }

    residualAlpha   1e-6;
}

water
{
    type            purePhaseModel;
    diameterModel   constant;
    constantCoeffs
    {
        d               1e-4;
    }

    residualAlpha   1e-6;
}

blending
{
    default
    {
        type            linear;
        minFullyContinuousAlpha.air1 0.7;
        minPartlyContinuousAlpha.air1 0.3;
        minFullyContinuousAlpha.air2 0.7;
        minPartlyContinuousAlpha.air2 0.3;
        minFullyContinuousAlpha.water 0.7;
        minPartlyContinuousAlpha.water 0.3;
    }

    drag
    {
        type            linear;
        minFullyContinuousAlpha.air1 0.7;
        minPartlyContinuousAlpha.air1 0.5;
        minFullyContinuousAlpha.air2 0.7;
        minPartlyContinuousAlpha.air2 0.5;
        minFullyContinuousAlpha.water 0.7;
        minPartlyContinuousAlpha.water 0.5;
    }
}

surfaceTension
(
    (air1 and water)
    {
        type            constant;
        sigma           0.07;
    }

    (air2 and water)
    {
        type            constant;
        sigma           0.07;
    }
);

interfaceCompression
();

aspectRatio
(
    (air1 in water)
    {
        type            constant;
        E0              1.0;
    }

    (water in air1)
    {
        type            constant;
        E0              1.0;
    }

    (air2 in water)
    {
        type            constant;
        E0              1.0;
    }

    (water in air2)
    {
        type            constant;
        E0              1.0;
    }
);

drag
(
    (air1 in water)
    {
        type            SchillerNaumann;
        residualRe      1e-3;
        swarmCorrection
        {
            type        none;
        }
    }

    (water in air1)
    {
        type            SchillerNaumann;
        residualRe      1e-3;
        swarmCorrection
        {
            type        none;
        }
    }

    (air1 and water)
    {
        type            segregated;
        m               0.5;
        n               8;
        swarmCorrection
        {
            type        none;
        }
    }

    (air2 in water)
    {
        type            SchillerNaumann;
        residualRe      1e-3;
        swarmCorrection
        {
            type        none;
        }
    }

    (water in air2)
    {
        type            SchillerNaumann;
        residualRe      1e-3;
        swarmCorrection
        {
            type        none;
        }
    }

    (air2 and water)
    {
        type            segregated;
        m               0.5;
        n               8;
        swarmCorrection
        {
            type        none;
        }
    }

    (air1 in air2)
    {
        type            SchillerNaumann;
        residualRe      1e-3;
        swarmCorrection
        {
            type        none;
        }
    }

    (air2 in air1)
    {
        type            SchillerNaumann;

        residualRe      1e-3;
        swarmCorrection
        {
            type        none;
        }
    }

    (air1 and air2)
    {
        type            segregated;
        m               0.5;
        n               8;
        swarmCorrection
        {
            type        none;
        }
    }
);

virtualMass
(
    (air1 in water)
    {
        type            constantCoefficient;
        Cvm             0.5;
    }

    (water in air1)
    {
        type            constantCoefficient;
        Cvm             0.5;
    }

    (air2 in water)
    {
        type            constantCoefficient;
        Cvm             0.5;
    }

    (water in air2)
    {
        type            constantCoefficient;
        Cvm             0.5;
    }

    (air1 in air2)
    {
        type            constantCoefficient;
        Cvm             0.5;
    }

    (air1 in air2)
    {
        type            constantCoefficient;
        Cvm             0.5;
    }
);

heatTransfer
(
    (air1 in water)
    {
        type            RanzMarshall;
        residualAlpha   1e-4;
    }

    (water in air1)
    {
        type            RanzMarshall;
        residualAlpha   1e-4;
    }

    (air2 in water)
    {
        type            RanzMarshall;
        residualAlpha   1e-4;
    }

    (water in air2)
    {
        type            RanzMarshall;
        residualAlpha   1e-4;
    }

    (air1 in air2)
    {
        type            RanzMarshall;
        residualAlpha   1e-4;
    }

    (air2 in air1)
    {
        type            RanzMarshall;
        residualAlpha   1e-4;
    }
);

phaseTransfer
();

lift
();

wallLubrication
();

turbulentDispersion
();

// Minimum allowable pressure
pMin            10000;


// ************************************************************************* //
